InitWindow(windowx, windowy, "Hello, Raylib-D!");
SetWindowPosition(1800,0);
SetTargetFPS(60);
import tile;
mixin setupdraw!("tile");
import ship;
mixin setupdraw!("ship");
//TODO, recreate the overload hack in survoir/drawing.mix
void drawtilerow(tilerow a,int y){
	foreach(i,e;a){
		drawtile(e,(i*32).to!int,y,2);
	}
}
void drawbackground(background bg,int offset){
	import std.range;
	foreach(i,ref row;bg[].enumerate){
		import consants;
		drawtilerow(row,playfieldy-cast(int)(i)*32+offset);
}}
void drawplayer(player a){
	drawship(0,a.x,a.y,2);
}
void drawbullets(bullets bs){
	foreach(b;bs){
		drawtile(b.which,b.x,b.y);
	}
}
void drawenemybullets(enemybullets bs){
	foreach(b;bs){
		drawtile(b.which,b.x,b.y);
	}
}
void draw1(bigships ss){
	foreach(s;ss){
		drawship(s.type+1,cast(int)s.pos.x,cast(int)s.pos.y,2);
}}
void draw2(midships ss){
	foreach(s;ss){
		drawship(s.type+4,cast(int)s.pos.x,cast(int)s.pos.y,1.5);
}}
void draw3(smlships ss){
	foreach(s;ss){
		drawship(s.type+16,cast(int)s.pos.x,cast(int)s.pos.y,1);
}}
//void drawenemys(enemyships es){
//	foreach(e;es){
//		drawship(e.type,e.x,e.y,e.type<4?2:1);}
//}